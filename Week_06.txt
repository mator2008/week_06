
**Week 06 Project***
****************************************************************


// Card Class
public class Card {
    private int value; // Represents 2-14 (2-Ace)
    private String name; // E.g., "Ace of Diamonds"

    // Constructor
    public Card(int value, String name) {
        this.value = value;
        this.name = name;
    }

    // Getters and Setters
    public int getValue() {
        return value;
    }

    public void setValue(int value) {
        this.value = value;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    // Describe Method
    public void describe() {
        System.out.println("Card: " + name + " (Value: " + value + ")");
    }
}

// Deck Class
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class Deck {
    private List<Card> cards;

    // Constructor
    public Deck() {
        cards = new ArrayList<>();
        String[] suits = {"Hearts", "Diamonds", "Clubs", "Spades"};
        String[] names = {"Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine", "Ten", 
                          "Jack", "Queen", "King", "Ace"};
        
        for (int i = 0; i < suits.length; i++) {
            for (int j = 0; j < names.length; j++) {
                cards.add(new Card(j + 2, names[j] + " of " + suits[i]));
            }
        }
    }

    // Shuffle Method
    public void shuffle() {
        Collections.shuffle(cards);
    }

    // Draw Method
    public Card draw() {
        return cards.remove(0);
    }
}

// Player Class
import java.util.ArrayList;
import java.util.List;

public class Player {
    private List<Card> hand;
    private int score;
    private String name;

    // Constructor
    public Player(String name) {
        this.name = name;
        this.hand = new ArrayList<>();
        this.score = 0;
    }

    // Describe Method
    public void describe() {
        System.out.println("Player: " + name + " (Score: " + score + ")");
        for (Card card : hand) {
            card.describe();
        }
    }

    // Flip Method
    public Card flip() {
        return hand.remove(0);
    }

    // Draw Method
    public void draw(Deck deck) {
        hand.add(deck.draw());
    }

    // IncrementScore Method
    public void incrementScore() {
        score++;
    }

    // Getters
    public int getScore() {
        return score;
    }
}

// App Class
public class App {
    public static void main(String[] args) {
        // Instantiate deck and players
        Deck deck = new Deck();
        Player player1 = new Player("Player 1");
        Player player2 = new Player("Player 2");

        // Shuffle the deck
        deck.shuffle();

        // Deal cards
        for (int i = 0; i < 52; i++) {
            if (i % 2 == 0) {
                player1.draw(deck);
            } else {
                player2.draw(deck);
            }
        }

        // Play the game
        for (int i = 0; i < 26; i++) {
            Card card1 = player1.flip();
            Card card2 = player2.flip();

            card1.describe();
            card2.describe();

            if (card1.getValue() > card2.getValue()) {
                player1.incrementScore();
                System.out.println("Player 1 wins this round!");
            } else if (card1.getValue() < card2.getValue()) {
                player2.incrementScore();
                System.out.println("Player 2 wins this round!");
            } else {
                System.out.println("It's a tie! No points awarded.");
            }
        }

        // Final scores
        System.out.println("\nFinal Scores:");
        System.out.println("Player 1: " + player1.getScore());
        System.out.println("Player 2: " + player2.getScore());

        // Determine the winner
        if (player1.getScore() > player2.getScore()) {
            System.out.println("Player 1 wins the game!");
        } else if (player1.getScore() < player2.getScore()) {
            System.out.println("Player 2 wins the game!");
        } else {
            System.out.println("It's a draw!");
        }
    }
}